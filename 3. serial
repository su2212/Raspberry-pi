#include <stdio.h>
#include <string.h>			//문자열 헤더파일
#include <wiringPi.h>
#include <wiringSerial.h>	//시리얼
#include<errno.h>			//오류 검사
#include <softPwm.h>

#define motor 26 			//Physcial 32 PWM0

#define led1 23				//Physcial 33
#define led2 24				//Physcial 35 소프트웨어 PWM
#define led3 25				//Physcial 37
#define led4 27				//Physcial 36

unsigned char LED[4]={led1,led2,led3,led4};

void h_pwm(void)
{
	pinMode(motor,PWM_OUTPUT);	
	pwmSetMode(PWM_MODE_MS);	//mark space mode 설정
	pwmSetClock(400);			//50Hz  1000ms/50Hz=20ms/Hz
	pwmSetRange(960);
	pwmWrite(motor,110);
	
}
void s_pwm(void)
{
	for(int n=0; n<4; n++)		//소프트웨어 PWM
	{
		softPwmCreate(LED[n],0,960);
	}
}
int main(void)
{
	if(wiringPiSetup()==-1) return 1;
	
	int =0;
	int mode=0;
	
	int fd;			//파일 디스크립트
	char light_num;
	char light;
	char password[5];
	char confirm[5];
	
	if ((fd = serialOpen ("/dev/ttyS0", 9600)) < 0)		//파일 디스크립트에 시리얼 통신 활성화 기능 대입
	{
		fprintf(stderr,"Unable to open serial device:%s\n",strerror(errno)); //에러 번호를 설명하는 에러 문자열을 반환하는 함수
		return 1;
	}
	h_pwm();
	s_pwm();
	
	while(1)
	{
		if(mode == 0)
		{
			fflush(stdin);
			printf("--------select mode-------- \n");
			printf("mode 1 : Set password \n");
			printf("mode 2 : Enter your password \n");
			printf("mode 3 : Led number you want to turn on \n");
			mode=getchar(); //라즈베리파이 터미널에서 문자 입력 함수
			getchar(); //데이터를 PC로부터 받는 함수
		}
		else if(mode =='1')
		{
			fflush(stdin);
			 if(serialDataAvail(fd) > 0)	//데이터가 들어와서 0보다 큰지 조건문
			 {								//읽을 수 있는 문자의 수를 돌려주는 함수 , 오류상태에서는 -1을 돌려줌
				  for(n=0; n<5; n++)		//패스워드 키보드 입력 4개를 받은 후 
				  {
					  password[n] = serialGetchar(fd); //winde68에서 받아온 값
				  }
				  if(password[4]=='\r')	//5번쨰 입력이 엔터키 일 시 처음 선택 모드로 이동
				  {
					mode=0;
				  }
				  else if(password[4]!='\r') //5번째 입력이 엔터키가 아닐 시 다시 설정
				  { 
					mode=0;
				  }
				 printf(" * * * * \n");
			 }
		}
		else if(mode =='2')
		{
			fflush(stdin);
			if((serialDataAvail(fd) > 0))
			{
				for(n=0; n<5; n++)
				{
					confirm[n] = serialGetchar(fd); //winde68에 입력한 값을 cinfirm에 대입
				}
				if(confirm[4]=='\r')
				{
						if((password[0]==confirm[0])&&(password[1]==confirm[1])&&(password[2]==confirm[2])&&(password[3]==confirm[3]))
						{
							printf(" * * * * \n");
							printf("Passwords match\n");
							pwmWrite(motor,72);
							delay(3000);
							pwmWrite(motor,110);
							mode=0;
						}
						else
						{
							printf(" * * * * \n");
							printf("Password mismatch\n");
							for(i=0; i<3; i++)
							{
								delay(100);
								for(a=0; a<4; a++)
								{
									softPwmWrite(LED[a],960);
									delay(100);
									softPwmWrite(LED[a],0);
									delay(100);
								}
							}
							mode=0;
						}
				}
				else if(confirm[4]!='\r')
				{
					mode=0;
				}
			}
		}
		else if(mode == '3')
		{
			fflush(stdin);
			light_num = serialGetchar(fd);
			if(data =='1')
			{
				
				softPwmWrite(LED[0],480);
				delay(1);
				printf("Set the light\n");
				printf(" 1 : lightest\n");
				printf(" 2 : less light\n");
				light = serialGetchar(fd);
				if(light=='1')
				{
					softPwmWrite(LED[0],0);
					mode=0;
				}
				else if(light=='2')
				{
					softPwmWrite(LED[0],960);
					mode=0;
				}
			}
			if(data =='2')
			{
				softPwmWrite(LED[1],480);
				delay(1);
				printf("Set the light\n");
				printf(" 1 : lightest\n");
				printf(" 2 : less light\n");
				light = serialGetchar(fd);
				if(light=='1')
				{
					softPwmWrite(LED[1],0);
					mode=0;
				}
				else if(light=='2')
				{
					softPwmWrite(LED[1],960);
					mode=0;
				}
			}
			if(data =='3')
			{
				softPwmWrite(LED[2],480);
				delay(1);
				printf("Set the light\n");
				printf(" 1 : lightest\n");
				printf(" 2 : less light\n");
				light = serialGetchar(fd);
				if(light=='1')
				{
					softPwmWrite(LED[2],0);
					mode=0;
				}
				else if(light=='2')
				{
					softPwmWrite(LED[2],960);
					mode=0;
				}
			}
			if(data =='4')
			{
				softPwmWrite(LED[3],480);
				delay(1);
				printf("Set the light\n");
				printf(" 1 : lightest\n");
				printf(" 2 : less light\n");
				light = serialGetchar(fd);
				if(light=='1')
				{
					softPwmWrite(LED[3],0);
					mode=0;
				}
				else if(light=='2')
				{
					softPwmWrite(LED[3],960);
					mode=0;
				}
			}
		}
	}
}
					
				
				
				
			
				
				 
				
					 
			
	
		
